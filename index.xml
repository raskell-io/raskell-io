<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Raskell</title><link>https://raskell.io/</link><description>Recent content on Raskell</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 06 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://raskell.io/index.xml" rel="self" type="application/rss+xml"/><item><title>My OpenBSD journey: Getting it virtualized with libvirt (1)</title><link>https://raskell.io/articles/my-openbsd-journey-getting-it-virtualized-with-libvirt-1/</link><pubDate>Mon, 06 Feb 2023 00:00:00 +0000</pubDate><author>Raffael</author><guid>https://raskell.io/articles/my-openbsd-journey-getting-it-virtualized-with-libvirt-1/</guid><description>
&lt;p>&lt;img loading="lazy"
src="https://raskell.io/openbsd-libvirt.png"
alt="openbsd-libvirt.png"
width=960
height="300" />&lt;/p>
&lt;h2 id="void-linux-as-my-daily-driver">
&lt;a href="#void-linux-as-my-daily-driver" class="anchor">
&lt;svg class="icon" aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16">
&lt;path fill-rule="evenodd"
d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
&lt;/path>
&lt;/svg>
&lt;/a>
Void Linux as my daily driver
&lt;/h2>
&lt;p>Around six months ago, I decided to ditch my long in the tooth Arch-based setup on my belovest Thinkpad X1 Carbon. I&amp;rsquo;ve been very loyal over the years, and almost came to belive that Arch will be a constant in my adult life. While I kept up with upcoming technologies, I somehow lost track of the ever so diversifying landscape of Linux distributions. It took me a while of constantly coming across a generically named reference to what seemed to be yet another Linux distribution. That outwardly generic sounding name, Void Linux, kept poking my curiosity by supposedly feeling like Arch Linux in the old days, while sharing some substantial DNA with the BSD operating systems. Yet, that&amp;rsquo;s another story I might tell another day, but to remain brief, the BSDs, in particular the infamous OpenBSD with its quite infamous lead developer Theo De Raadt, always were what I considered the endgame. The holy grail of Unix operating systems, so did I think over the decades, FreeBSD, NetBSD and OpenBSD, have always been on my personal radar and I felt I had to earn the intellectual capacity to be able to properly put them at use one day. Last year, when I made the (almost painless) switch from Arch Linux to Void Linux, the simplicity and especially the barebone experience of Void reignited the fascination and the admiration I always had for the BSD operating systems and their philosophy.&lt;/p>
&lt;p>While I could write (and definitely will in the near future) about how my journey onto Void Linux and how it has been so far, I preferred to write down, in some like diary, and document every step on how one can approach and ultimately use OpenBSD in 2023. Big disclaimer, I&amp;rsquo;ve yet to install OpenBSD on some baremetal server I ordered some days ago, but dabbled around in the meantime with OS-level virtualization in order to get it running. That&amp;rsquo;s what brings me to &lt;em>libvirt&lt;/em> and my surprise to learn that I wouldn&amp;rsquo;t need some full-fledged virtualization solution like the ones offered by VirtualBox or VMWare to efficiently run a virtualized OpenBSD machine.&lt;/p>
&lt;h3 id="from-void-to-openbsd">
&lt;a href="#from-void-to-openbsd" class="anchor">
&lt;svg class="icon" aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16">
&lt;path fill-rule="evenodd"
d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
&lt;/path>
&lt;/svg>
&lt;/a>
From Void to OpenBSD
&lt;/h3>
&lt;p>Before I tell you more about the history of how things went down, let me give you some basic notions about both Void Linux, being one of many Linux distributions representing them all as it ended up being my distribution of choice, and OpenBSD. As already mentioned earlier, Void Linux and OpenBSD are both Unix-like operating systems, but they feature enough differences to make them noteworthy. Here are a few similarities and differences between the two:&lt;/p>
&lt;p>What is similar:&lt;/p>
&lt;ul>
&lt;li>Both are free and open-source operating systems.&lt;/li>
&lt;li>Both use a package manager for software management. Void Linux uses XBPS, while OpenBSD uses pkg_add.&lt;/li>
&lt;li>Both prioritize security and stability in their development and design.&lt;/li>
&lt;li>Both feature a version control based package repository, meaning that changes in build definition are managed by pull requests from users.&lt;/li>
&lt;/ul>
&lt;p>What is different:&lt;/p>
&lt;ul>
&lt;li>License: Void Linux is licensed under the MIT License, while OpenBSD is licensed under the ISC License.&lt;/li>
&lt;li>Philosophy: OpenBSD prioritizes security and privacy, while Void Linux prioritizes simplicity and modularity.&lt;/li>
&lt;li>Package Management: Void Linux uses a binary package manager (XBPS), while OpenBSD uses a source-based package manager (pkg_add).&lt;/li>
&lt;li>Package Repository: Void Linux has a large and diverse repository, while OpenBSD has a smaller and more curated repository.&lt;/li>
&lt;li>Init System: Void Linux uses runit as its init system, while OpenBSD uses rc. None uses the infamous systemd init system.&lt;/li>
&lt;/ul>
&lt;h2 id="what-is-openbsd-in-a-nutshell">
&lt;a href="#what-is-openbsd-in-a-nutshell" class="anchor">
&lt;svg class="icon" aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16">
&lt;path fill-rule="evenodd"
d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
&lt;/path>
&lt;/svg>
&lt;/a>
What is OpenBSD in a nutshell
&lt;/h2>
&lt;p>OpenBSD is a free and open-source operating system that focuses on security, standardization, and robustness. It is based on the Berkeley Software Distribution (BSD) Unix operating system and is developed by a global community of volunteers. OpenBSD aims to provide a secure platform for both personal and enterprise use by implementing strong security features, including access control mechanisms, encryption, and auditing.&lt;/p>
&lt;p>Theo de Raadt is the founder and lead developer of OpenBSD. His main objective with OpenBSD is to create a secure operating system that is free from backdoors, vulnerabilities, and other security weaknesses. He is committed to auditing the source code of the operating system and third-party software included with it, to identify and remove any potential security risks. De Raadt is also dedicated to improving the overall quality of the codebase and ensuring compatibility with a wide range of hardware and software.&lt;/p>
&lt;h3 id="virtualization-with-libvirt">
&lt;a href="#virtualization-with-libvirt" class="anchor">
&lt;svg class="icon" aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16">
&lt;path fill-rule="evenodd"
d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
&lt;/path>
&lt;/svg>
&lt;/a>
Virtualization with libvirt
&lt;/h3>
&lt;p>libvirt is an open-source virtualization management library that provides a simple and unified API for managing virtualization technologies, including KVM, QEMU, Xen, and others. It aims to simplify the process of creating, managing, and migrating virtual machines, storage, and networks, and to make it easier for administrators to manage virtual environments.&lt;/p>
&lt;p>To virtualize an operating system ISO like OpenBSD with libvirt, you need to follow these steps:&lt;/p>
&lt;ol>
&lt;li>Install libvirt and the virtualization technology you want to use, such as KVM.&lt;/li>
&lt;li>Download the OpenBSD ISO file and place it in a location accessible by libvirt.&lt;/li>
&lt;li>Create a new virtual machine in libvirt with the OpenBSD ISO as the installation media. This can be done through the command line or using a graphical user interface such as virt-manager.&lt;/li>
&lt;li>Configure the virtual machine, including the amount of memory, CPU, and disk space, to meet the requirements of OpenBSD.&lt;/li>
&lt;li>Start the virtual machine and install OpenBSD as you would on a physical machine.&lt;/li>
&lt;li>Once the installation is complete, you can configure the virtual network, storage, and other settings as required.&lt;/li>
&lt;li>Finally, you can use the libvirt API or the command line to manage and control the virtual machine, including starting, stopping, migrating, and snapshotting.&lt;/li>
&lt;/ol>
&lt;h3 id="step-by-step-guide">
&lt;a href="#step-by-step-guide" class="anchor">
&lt;svg class="icon" aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16">
&lt;path fill-rule="evenodd"
d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
&lt;/path>
&lt;/svg>
&lt;/a>
Step-by-step guide
&lt;/h3>
&lt;p>Let&amp;rsquo;s first install the &lt;code>libvirt&lt;/code> package and some related packages which we need in order to connect via VNC. The VNC will provide us with the possibility to use the graphical interface of the running OpenBSD instance.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo xbps-install -S dbus qemu libvirt virt-manager virt-viewer tigervnc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now, we need to add our user, in my case &lt;code>raskell&lt;/code>, to the &lt;code>libvirt&lt;/code> group which got simultanously created with the installation of libvirt.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo usermod -aG libvirt raskell
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>OpenBSD features a release cycle of six months. We would need to update our system every six month to keep up with the latest packages. During a given release, only security and bug fix patches are applied to the curated packages maintained by pkg_add. Therefore, in February 2023, we&amp;rsquo;re using the OpenBSD 7.2 release version. As I&amp;rsquo;m living in Switzerland, I chose to pull the iso image from a Swiss mirror, in this case from &lt;code>mirror.ungleich.ch/pub/OpenBSD&lt;/code> (check what mirror is closest to you to get the best download rate).&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># cd /var/lib/libvirt/boot/&lt;/span>
&lt;span class="c1"># sudo wget https://mirror.ungleich.ch/pub/OpenBSD/7.2/amd64/install72.iso&lt;/span>
--2023-01-12 20:48:15-- https://mirror.ungleich.ch/pub/OpenBSD/7.2/amd64/install72.iso
Resolving mirror.ungleich.ch &lt;span class="o">(&lt;/span>mirror.ungleich.ch&lt;span class="o">)&lt;/span>... 2a0a:e5c0:2:2:400:c8ff:fe68:bef3, 185.203.114.135
Connecting to mirror.ungleich.ch &lt;span class="o">(&lt;/span>mirror.ungleich.ch&lt;span class="o">)&lt;/span>&lt;span class="p">|&lt;/span>2a0a:e5c0:2:2:400:c8ff:fe68:bef3&lt;span class="p">|&lt;/span>:443... connected.
HTTP request sent, awaiting response... &lt;span class="m">200&lt;/span> OK
Length: &lt;span class="m">583352320&lt;/span> &lt;span class="o">(&lt;/span>556M&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>application/octet-stream&lt;span class="o">]&lt;/span>
Saving to: ‘install72.iso.1’
install72.iso.1 100%&lt;span class="o">[====================================================================&lt;/span>&amp;gt;&lt;span class="o">]&lt;/span> 556.33M 7.11MB/s in 77s
2023-01-12 20:49:33 &lt;span class="o">(&lt;/span>7.19 MB/s&lt;span class="o">)&lt;/span> - ‘install72.iso.1’ saved &lt;span class="o">[&lt;/span>583352320/583352320&lt;span class="o">]&lt;/span>
sudo wget https://mirror.ungleich.ch/pub/OpenBSD/7.2/amd64/SHA256
--2023-01-12 20:47:38-- https://mirror.ungleich.ch/pub/OpenBSD/7.2/amd64/SHA256
Resolving mirror.ungleich.ch &lt;span class="o">(&lt;/span>mirror.ungleich.ch&lt;span class="o">)&lt;/span>... 2a0a:e5c0:2:2:400:c8ff:fe68:bef3, 185.203.114.135
Connecting to mirror.ungleich.ch &lt;span class="o">(&lt;/span>mirror.ungleich.ch&lt;span class="o">)&lt;/span>&lt;span class="p">|&lt;/span>2a0a:e5c0:2:2:400:c8ff:fe68:bef3&lt;span class="p">|&lt;/span>:443... connected.
HTTP request sent, awaiting response... &lt;span class="m">200&lt;/span> OK
Length: &lt;span class="m">1992&lt;/span> &lt;span class="o">(&lt;/span>1.9K&lt;span class="o">)&lt;/span> &lt;span class="o">[&lt;/span>application/octet-stream&lt;span class="o">]&lt;/span>
Saving to: ‘SHA256.1’
SHA256.1 100%&lt;span class="o">[====================================================================&lt;/span>&amp;gt;&lt;span class="o">]&lt;/span> 1.95K --.-KB/s in 0s
2023-01-12 20:47:39 &lt;span class="o">(&lt;/span>&lt;span class="m">742&lt;/span> MB/s&lt;span class="o">)&lt;/span> - ‘SHA256.1’ saved &lt;span class="o">[&lt;/span>1992/1992&lt;span class="o">]&lt;/span>
&lt;span class="c1"># grep install63.iso SHA256 &amp;gt; /tmp/x&lt;/span>
&lt;span class="c1"># sha256sum -c /tmp/x&lt;/span>
&lt;span class="c1"># rm /tmp/x&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Before we can start the virtualization server and get running our OpenBSD instance, we need to define the configuraiton on how to virtualize and ultimately boot the system with. This is done with &lt;code>virt-install&lt;/code>. Noteworthy here is that we QEMU as our emulation solution of choice, we allocate up to 4GB of RAM and 4 CPU cores to the machine.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo virt-install &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --name&lt;span class="o">=&lt;/span>openbsd &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --virt-type&lt;span class="o">=&lt;/span>qemu &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --memory&lt;span class="o">=&lt;/span>2048,maxmemory&lt;span class="o">=&lt;/span>&lt;span class="m">4096&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --vcpus&lt;span class="o">=&lt;/span>2,maxvcpus&lt;span class="o">=&lt;/span>&lt;span class="m">4&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --cpu host &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --os-variant&lt;span class="o">=&lt;/span>openbsd7.0 &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --cdrom&lt;span class="o">=&lt;/span>/var/lib/libvirt/boot/install72.iso &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --network&lt;span class="o">=&lt;/span>&lt;span class="nv">bridge&lt;/span>&lt;span class="o">=&lt;/span>virbr0,model&lt;span class="o">=&lt;/span>virtio &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --graphics&lt;span class="o">=&lt;/span>vnc &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span> --disk &lt;span class="nv">path&lt;/span>&lt;span class="o">=&lt;/span>/var/lib/libvirt/images/openbsd.qcow2,size&lt;span class="o">=&lt;/span>40,bus&lt;span class="o">=&lt;/span>virtio,format&lt;span class="o">=&lt;/span>qcow2
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Once, it is up and running, we can use a vnc solution to connect to the running machine. In this case, I chose &lt;code>virsh&lt;/code> to do the job. virsh is a command-line interface tool for managing virtualization environments created with libvirt. It allows us to manage virtual machines, storage pools, and network interfaces, as well as other virtualization components, from the command line.&lt;/p>
&lt;p>To establish a VNC connection with a running libvirt virtualized OpenBSD instance, you can use the following steps:&lt;/p>
&lt;ol>
&lt;li>Start the virtual machine in libvirt: You can start the virtual machine using the virsh command &lt;strong>&lt;code>virsh start &amp;lt;vm-name&amp;gt;&lt;/code>&lt;/strong>, where &lt;strong>&lt;code>&amp;lt;vm-name&amp;gt;&lt;/code>&lt;/strong> is the name of the virtual machine you want to start.&lt;/li>
&lt;li>Find the VNC display: Once the virtual machine is running, you can find the VNC display number for the virtual machine using the virsh command &lt;strong>&lt;code>virsh vncdisplay &amp;lt;vm-name&amp;gt;&lt;/code>&lt;/strong>.&lt;/li>
&lt;li>Connect to the VNC display: You can connect to the VNC display using a VNC client, such as &lt;strong>&lt;code>vncviewer&lt;/code>&lt;/strong>, and specify the IP address of the host running the virtual machine and the VNC display number. For example, if the host&amp;rsquo;s IP address is &lt;strong>&lt;code>192.168.0.100&lt;/code>&lt;/strong> and the VNC display number is &lt;strong>&lt;code>:0&lt;/code>&lt;/strong>, the command to connect would be &lt;strong>&lt;code>vncviewer 192.168.0.100:0&lt;/code>&lt;/strong>.&lt;/li>
&lt;li>Authenticate to the VNC server: You may need to enter a password to authenticate to the VNC server. The password is set when the virtual machine is created in libvirt.&lt;/li>
&lt;/ol>
&lt;p>With these steps, you can establish a VNC connection with a running libvirt virtualized OpenBSD instance and interact with the virtual machine&amp;rsquo;s graphical user interface.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ virsh dumpxml openbsd &lt;span class="p">|&lt;/span> grep vnc
&amp;lt;graphics &lt;span class="nv">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;vnc&amp;#39;&lt;/span> &lt;span class="nv">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;5900&amp;#39;&lt;/span> &lt;span class="nv">autoport&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;yes&amp;#39;&lt;/span> &lt;span class="nv">listen&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;127.0.0.1&amp;#39;&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Like I did, most of you would like to interact with a graphical interface such as with X11. For that, we yet another tool, a so-called VNC viewer. A very simple implementation of such a vnc viewer is tigervnc (simply install it with &lt;code>$ sudo xbps-install -S tigervnc&lt;/code>).&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ sudo virsh --connect
qemu:///system start openbsd
Domain &lt;span class="s1">&amp;#39;openbsd&amp;#39;&lt;/span> started
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>{tbc}&lt;/p></description></item><item><title>Hello and outlook</title><link>https://raskell.io/articles/hello-and-outlook/</link><pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate><author>Raffael</author><guid>https://raskell.io/articles/hello-and-outlook/</guid><description>
&lt;p>&lt;img loading="lazy"
src="https://raskell.io/hello-world.png"
alt="hello-world.png"
width=960
height="300" />&lt;/p>
&lt;h2 id="hello-world">
&lt;a href="#hello-world" class="anchor">
&lt;svg class="icon" aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16">
&lt;path fill-rule="evenodd"
d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
&lt;/path>
&lt;/svg>
&lt;/a>
Hello world
&lt;/h2>
&lt;p>Welcome to my tech blog! My name is Raffael Schneider and I am excited to share my rumings about the state of tech, open-source, and the life as a software developer with you.&lt;/p>
&lt;p>In this first post, I wanted to introduce myself and explain what you can expect to find on this blog. I have been working in the tech industry for several years, and I have experience with a variety of technologies, programming languages, and operating systems. I have a strong interest in open-source software and the principles of open collaboration and sharing that underpin it. Also, I have a passion for tech hardware and the funtional restoration of discarded equipment. The freedom to express oneself with technology to make the world a more comfortable place is a strong focus of mine.&lt;/p>
&lt;h2 id="outlook">
&lt;a href="#outlook" class="anchor">
&lt;svg class="icon" aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16">
&lt;path fill-rule="evenodd"
d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
&lt;/path>
&lt;/svg>
&lt;/a>
Outlook
&lt;/h2>
&lt;p>On this blog, I will be covering a wide range of topics related to technology in general, open-source, operating systems, programming, and tech hardware. Some of the things you can expect to find include:&lt;/p>
&lt;ul>
&lt;li>My dabblings into new and bleeding-edge technologies in general&lt;/li>
&lt;li>My experience in using Linux, BSDs, and embedded operating systems&lt;/li>
&lt;li>Exploration of new and exciting open-source projects&lt;/li>
&lt;li>Discussion of the latest technology trends and innovations&lt;/li>
&lt;li>Personal musings and insights into the tech industry&lt;/li>
&lt;/ul>
&lt;p>I believe that technology has the power to change the world, and I am excited to be a small part of that change. I hope that this blog will serve as a valuable resource for anyone interested in technology, open-source, Linux, OpenBSD, and programming. I will be posting new content on a regular basis, so be sure to check back often.&lt;/p>
&lt;p>In my next post, I will dive into a specific topic and share my knowledge and experience. I want to make sure that my readers will learn something new every time they visit my blog.&lt;/p>
&lt;p>Thank you for visiting, and I look forward to connecting with you on social media or in real life.&lt;/p></description></item></channel></rss>